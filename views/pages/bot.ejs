<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Support Chat-Bot</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 font-sans">
    <div class="max-w-md mx-auto my-10 bg-white rounded-lg shadow-md">
        <!-- Welcome Screen -->
        <div class="p-6">
            <h2 class="text-xl font-bold text-gray-800">Welcome to Customer Support!</h2>
            <p class="text-gray-600">How can we help you today?</p>
            <div class="mt-4">
                <button class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">Track Order</button>
                <button class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">Account Info</button>
                <button class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">Contact Support</button>
            </div>
        </div>
        
        <!-- Chat Interface -->
        <div class="p-6 border-t">
            <div id="chatHistory" class="h-64 overflow-y-auto bg-gray-50 p-4 rounded-md">
                <!-- Static Chat History for testing -->
            </div>
            <div class="flex items-center mt-4">
                <input id="chatInput" type="text" class="flex-grow p-2 border rounded-md focus:outline-none" placeholder="Type your message...">
                <button id="sendBtn" class="bg-blue-500 text-white px-4 py-2 rounded-md ml-2 hover:bg-blue-600">Send</button>
            </div>
        </div>

        <!-- FAQ Section -->
        <div class="p-6 border-t">
            <h3 class="text-lg font-bold text-gray-800">FAQs</h3>
            <div class="mt-2">
                <input type="text" class="w-full p-2 border rounded-md focus:outline-none" placeholder="Search FAQs...">
            </div>
            <ul class="mt-4">
                <!-- Static FAQ for testing -->
                <li class="mb-2">
                    <details class="bg-gray-50 p-3 rounded-md">
                        <summary class="cursor-pointer text-blue-600 font-medium">How can I reset my password?</summary>
                        <p class="mt-2 text-gray-600">You can reset your password by clicking on the "Forgot Password" link on the login page.</p>
                    </details>
                </li>
            </ul>
        </div>

        <!-- Language Selection -->
        <div class="p-6 border-t">
            <label for="language" class="block text-gray-800 font-medium">Select Language:</label>
            <select id="language" class="w-full mt-2 p-2 border rounded-md focus:outline-none">
                <!-- Static Language Selection -->
                <option value="en">English</option>
                <option value="es">Spanish</option>
            </select>
        </div>

        <!-- Escalation Option -->
        <div class="p-6 border-t">
            <button class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 w-full">Talk to a Human</button>
        </div>

        <script>
          document.getElementById('sendBtn').addEventListener('click', function() {
            console.log('Send button clicked');
            // Get user input from the input field
            const userMessage = document.getElementById('chatInput').value;
        
            if (userMessage.trim() === "") return; // Don't send empty messages
        
            // Clear the input field
            document.getElementById('chatInput').value = "";
        
            // Update chat history with user message
            updateChatHistory('You', userMessage);
        
            // Send message to the server (simulated)
            sendMessageToServer(userMessage);
          });

          // Allow sending message using Enter key
          document.getElementById('chatInput').addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
              document.getElementById('sendBtn').click();
            }
          });
        
          function updateChatHistory(sender, message) {
            console.log(`Updating chat history: ${sender} says ${message}`);
            // Create a new message element
            const chatHistory = document.getElementById('chatHistory');
            const messageElement = document.createElement('div');
            messageElement.classList.add('my-4', 'text-sm', 'flex', sender === 'You' ? 'justify-end' : 'justify-start');
            
            const messageBubble = document.createElement('div');
messageBubble.classList.add('p-3', 'rounded-md');
if (sender === 'You') {
    messageBubble.classList.add('bg-blue-500', 'text-white');
} else {
    messageBubble.classList.add('bg-gray-300');
}
            messageBubble.innerHTML = `<strong>${sender}:</strong> ${message}`;
            
            messageElement.appendChild(messageBubble);
            chatHistory.appendChild(messageElement);
        
            // Scroll to the bottom smoothly
            chatHistory.scroll({ top: chatHistory.scrollHeight, behavior: 'smooth' });
          }
        
          function sendMessageToServer(message) {
  console.log('Sending message to server:', message);

  const apiEndpoint = 'http://localhost:3000/api/bot'; // Replace with your server's URL

  // Send POST request to the server with the message
  fetch(apiEndpoint, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ message })
  })
  .then(response => response.json())
  .then(data => {
    // Handle response from the server
    const botMessage = data.response;
    updateChatHistory('AI', botMessage);
  })
  .catch(error => {
    console.error('Error sending message to server:', error);
    updateChatHistory('AI', 'Sorry, something went wrong.');
  });
}

        </script>
    </div>
</body>
</html>
